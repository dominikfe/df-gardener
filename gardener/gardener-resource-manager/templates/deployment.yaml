apiVersion: apps/v1
kind: Deployment
metadata:
  name: gardener-resource-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: gardener
    role: resource-manager
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: gardener
      role: resource-manager
  template:
    metadata:
      {{- if .Values.targetKubeconfig }}
      annotations:
        checksum/secret-gardener-resource-manager-target-kubeconfig: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      {{- end }}
      labels:
        app: gardener
        role: resource-manager
    spec:
      serviceAccountName: gardener-resource-manager
      containers:
      - name: gardener-resource-manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /gardener-resource-manager
        - --leader-election={{ .Values.leaderElection.enabled }}
        - --leader-election-namespace={{ .Release.Namespace }}
        - --leader-election-resource-lock={{ .Values.leaderElection.resourceLock }}
        - --leader-election-lease-duration={{ .Values.leaderElection.leaseDuration }}
        - --leader-election-renew-deadline={{ .Values.leaderElection.renewDeadline }}
        - --leader-election-retry-period={{ .Values.leaderElection.retryPeriod }}
        - --leader-election-id={{ include "leaderelectionid" . }}
        {{- if .Values.controllers.cacheResyncPeriod }}
        - --cache-resync-period={{ .Values.controllers.cacheResyncPeriod }}
        {{- end }}
        {{- if .Values.controllers.garbageCollector.syncPeriod }}
        - --garbage-collector-sync-period={{ .Values.controllers.garbageCollector.syncPeriod }}
        {{- end }}
        - --sync-period={{ .Values.controllers.managedResource.syncPeriod }}
        - --max-concurrent-workers={{ .Values.controllers.managedResource.concurrentSyncs }}
        - --health-sync-period={{ .Values.controllers.managedResourceHealth.syncPeriod }}
        - --health-max-concurrent-workers={{ .Values.controllers.managedResourceHealth.concurrentSyncs }}
        - --token-invalidator-max-concurrent-workers={{ .Values.controllers.tokenInvalidator.concurrentSyncs }}
        - --token-requestor-max-concurrent-workers={{ .Values.controllers.tokenRequestor.concurrentSyncs }}
        - --projected-token-mount-expiration-seconds={{ .Values.webhooks.projectedTokenMount.expirationSeconds }}
        - --always-update={{ .Values.controllers.managedResource.alwaysUpdate }}
        {{- if .Values.targetKubeconfig }}
        - --target-kubeconfig=/etc/gardener-resource-manager/target-kubeconfig/kubeconfig.yaml
        {{- end }}
        {{- if .Values.targetNamespace }}
        - --target-namespace={{ .Values.targetNamespace }}
        {{- end }}
        {{- if .Values.metricsPort }}
        - --metrics-bind-address=":{{ .Values.metricsPort }}"
        {{- end }}
        {{- if .Values.healthPort }}
        - --health-bind-address=":{{ .Values.healthPort }}"
        {{- end }}
        {{- if .Values.serverBindAddress }}
        - --bind-address={{ .Values.serverBindAddress }}
        {{- end }}
        {{- if .Values.serverPort }}
        - --port={{ .Values.serverPort }}
        {{- end }}
        {{- if and .Values.serverCertificate .Values.serverPrivateKey }}
        - --tls-cert-dir=/etc/gardener-resource-manager/tls
        {{- end }}
        {{- if .Values.controllers.rootCAController.maxConcurrentWorkers }}
        - --root-ca-publisher-max-concurrent-workers={{ .Values.controllers.rootCAController.maxConcurrentWorkers }}
        {{- end }}
        {{- if .Values.controllers.rootCAController.rootCAPath }}
        - --root-ca-file="{{ .Values.controllers.rootCAController.rootCAPath }}"
        {{- end }}
        resources:
{{ toYaml .Values.resources | nindent 12 }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.healthPort }}
            scheme: HTTP
          initialDelaySeconds: 30
          failureThreshold: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .Values.healthPort }}
            scheme: HTTP
          initialDelaySeconds: 5
          failureThreshold: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - name: metrics
          containerPort: {{ .Values.metricsPort }}
        - name: health
          containerPort: {{ .Values.healthPort }}
        - name: server
          containerPort: {{ .Values.serverPort }}
        volumeMounts:
{{- if .Values.targetKubeconfig }}
        - name: target-kubeconfig
          mountPath: /etc/gardener-resource-manager/target-kubeconfig
{{- end }}
{{- if and .Values.serverCertificate .Values.serverPrivateKey }}
        - name: tls
          mountPath: /etc/gardener-resource-manager/tls
{{- end }}
      volumes:
{{- if .Values.targetKubeconfig }}
      - name: target-kubeconfig
        secret:
          secretName: gardener-resource-manager-target-kubeconfig
          defaultMode: 420
{{- end }}
{{- if and .Values.serverCertificate .Values.serverPrivateKey }}
      - name: tls
        secret:
          secretName: gardener-resource-manager-tls
          defaultMode: 420
{{- end }}
